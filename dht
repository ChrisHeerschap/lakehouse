#!/usr/bin/python
# Copyright (c) 2014 Adafruit Industries
# Author: Tony DiCola

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# Originally from: https://github.com/adafruit/Adafruit_Python_DHT
# Modified for use with collectd by cmh - Chris Heerschap (db94wookie@gmail.com)

import sys
import Adafruit_DHT

# I'm assuming a DHT22 because that's what I've got.
sensor = Adafruit_DHT.DHT22

if len(sys.argv) == 2:
	pin = sys.argv[1]
else:
	# Default to pin 17 if no arg1 is given
	pin = 17
	# Previously errored out in that condition
	#print 'usage: dht {pin number}'
	#sys.exit(1)

# Try to grab a sensor reading.  Use the read_retry method which will retry up
# to 15 times to get a sensor reading (waiting 2 seconds between each retry).
humidity, tempc = Adafruit_DHT.read_retry(sensor, pin)
# Get the farenheit temp
tempf = 9.0/5.0 * tempc + 32

# Note that sometimes you won't get a reading and
# the results will be null (because Linux can't
# guarantee the timing of calls to read the sensor).  
if humidity is not None and tempc is not None:
	print 'myTemp={0:0.1f}\nmyHumi={1:0.1f}\nmyTempC={2:0.1f}'.format(tempf, humidity, tempc)
else:
	# Not using this with collectd, no need to output anything
	#print 'myTemp=U\nmyHumi=U\nmyTempC=U'
	sys.exit(1)
