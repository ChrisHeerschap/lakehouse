#!/bin/bash

# debugging - verbose, but can show it's actually doing something.
#exec 2> /tmp/debug
#set -x

# Get values from collectd
HOSTNAME=${COLLECTD_HOSTNAME:-$HOSTNAME}
INTERVAL=${COLLECTD_INTERVAL:-10}

# Get the Raspberry Pi GPIO pin from ARG1, default to 18 cuz that's what I used.
PIN=${1:-18}

# Start an infinite loop
while now=$(/bin/date +%s)
do
	# Run the command every INTERVAL seconds
	#  The command takes a couple seconds to complete, so if I did
	#  a "sleep $INTERVAL" the time between samples would be larger than INTERVAL
	if (( now % INTERVAL == 0 ))
	then
		# Run my version of Adafruit's python to get the temp/humi values
		#  My modified verion outputs "temp=xxx" and "humi=xxx"
		eval $(/usr/bin/sudo /data/shared/rpi/bin/dht.py $PIN)
		#
		# Uncomment this if you want your values sent to syslog to prove it's doing something
		#logger -p daemon.info -t DHT-COLLECTD "Temp: ${temp}C Humi: ${humi}%"
		#
		# Dump the values
		#  See: https://collectd.org/documentation/manpages/collectd-exec.5.shtml#exec_data_format
		#  Note: this *HAS* to be host/plugin-instance/type-instance
		#        where "plugin" = "exec"
		#        and where "type" = a valid value from /usr/share/collectd/types.db
		#	 and where "-instance" is a unique identifier
		echo "PUTVAL \"$HOSTNAME/exec-environ/temperature-dht22\" interval=$INTERVAL $now:$temp"
		echo "PUTVAL \"$HOSTNAME/exec-environ/humidity-dht22\" interval=$INTERVAL $now:$humi"
	fi
	# Sleep 1 second before rechecking the time
	#  NB: See above why this isn't "sleep $INTERVAL"
	sleep 1
done
