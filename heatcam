#!/bin/bash

# Use this to disable the heat cam
#exit 0

exec 2> ~/tmp/debug-heatcam
PS4='$LINENO:$SECONDS:  '
set -x

# define the location of the foscam command
foscam=$HOME/bin/foscam

# Crop area for the heat relays
crop='101x30+244+280'

# set date-related vars
eval $(/bin/date +"now=%s; out=$HOME/graphite/heatcam-%y%m%d; outfile=$HOME/heatcam/%y%m%d/heatcam-%y%m%d-%H%M.jpg")

# ghetto way to round now to 10 seconds
now=$((now/10*10))

# Make the dir if necessary
mkdir -p ${outfile%/*}

# Set the camera to preset 1 and turn off the IR, giving a 3 second delay for this to take effect
$foscam -q preset 1 ir off wait 3

# Three tries to take a photo and get a value
for try in {1..3}
do
    # Take the photo
    $foscam -q snap $outfile

    # Get the value of the crop region
    #  This is the relay box on the wall. The relays light when the heat is on
    value=$(convert $outfile -crop $crop - | identify -format '%[mean]' -)

    # Don't use (( value )) as the test since a value of 0 (total darkness) would fail
    #  Instead check to see if there's anything in the var.
    [[ -n $value ]] && break
done

# Temporary while the lake webcam is offline
cp $outfile ~/www/lake.jpg

# Drop the decimal from the value (with a dark range of 0-2000, decimal values are just noise)
value=${value%.*}

# Check to see if value is still null
if [[ -z $value ]]
then
    # No point in logging anything, give up quietly.
    exit 1
elif (( value < 2000 ))
then
    # don't bother keeping a dark image
    rm $outfile
fi

# Convert the value to a binary
# Lower than 2000 is dark, so the heat is off.
if (( value < 25000 ))
then
    binval=0
# Above 25000 and below 100000 is the valid range of heat being on.
elif (( value < 100000 ))
then
    binval=1
else
    # If it's above the high limit, the lights might be on so just drop this value
    binval=''
fi

# Build the graphite line
msg="servers.lake.heat.camera $value $now"

# Add the binary value line if it's set
if [[ -n $binval ]]
then
    msg="$msg\nservers.lake.heat.value $binval $now"
	# Update the RRD graph
	/usr/bin/rrdtool update /home/cmh/rrd/heat.rrd $now:$binval
fi

# Log it locally and to graphite
echo -e "$msg" | tee -a $out | nc -N -w 10 lakepi 2003
