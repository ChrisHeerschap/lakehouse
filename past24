#!/bin/ksh

# Summarize the RRD values from the past 24 hours

exec 2> /home/cmh/tmp/debug-p24
set -x

function temprange {
	set -x
	# Initialize limits
	# Initialize maximum low and minimum high
	typeset tmax=-1000
	typeset tmin=1000
	typeset tsum=0
	typeset count=0
	typeset freezecount=0
	typeset tempfile=$1

	# Degree days shit
	# days per datapoint - 5 minutes out of 1440 in a day
	#  ** have to use "5.0" to trigger FP math
	#typeset daysper=$((5.0/1440))
	# Using the standard 65 degree reference
	#typeset ddref=65
	#typeset degreedays=0

	# Make sure the passed arg is a valid file
	if [[ ! -f $tempfile || ! -r $tempfile ]]
	then
		print -u2 "ERROR: Can't read RRD file: $tempfile"
		return 1
	fi

	# Get the maximum and minimum values from the outside temp
	# Sample: 1448889600: 2.3199333333e+01
	rrdtool fetch $tempfile AVERAGE | tail -n +3 | while read time temp
	do
		# Skip invalid values
		[[ $temp == nan ]] && continue
		# Check for max/min limits
		if (( temp > tmax ))
		then
			tmax=$temp
		elif (( temp < tmin ))
		then
			tmin=$temp
		fi
		# Calculate degree days
		#(( temp < ddref )) && degreedays=$((degreedays+(ddref-temp)*daysper))

		# Incrementing for calculating averages
		(( tsum += temp ))
		(( count++ ))
		(( temp < 32 )) && (( freezecount++ ))
	done

	tavg=$((tsum/count))

	# Output the information
	printf "Temperature range: %.1f-%.1fÂ°F, %.1f average" "$tmin" "$tmax" "$tavg"
	if [[ $2 == "dd" ]]
	then
		printf " (%.1f degree days)\n" "$((65-tavg))"
	else
		echo
	fi

	# If it's gotten below freezing, show how often
	if (( $tmin < 32 ))
	then
		printf "%.1f hours below freezing\n" "$((freezecount/12.0))"
	fi

}

print "Outside:"
temprange $HOME/rrd/outTemp.rrd dd

print "Inside:"
temprange $HOME/rrd/myTemp.rrd

#rrdtool graph lederp.txt DEF:v=$HOME/rrd/outTemp.rrd:outTemp:AVERAGE VDEF:vmin=v,MINIMUM VDEF:vmax=v,MAXIMUM VDEF:vavg=v,AVERAGE PRINT:vmin:"min=%lf" PRINT:vmax:max=%lf PRINT:vavg:avg=%lf
