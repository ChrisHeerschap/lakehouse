#!/bin/ksh

basedir="$HOME/collectd/lake/curl-weather/"
ydate=$(date -d yesterday +%Y-%m-%d)
yinfile="${basedir}/temperature-insideTemp-$ydate"
youtfile="${basedir}/temperature-outsideTemp-$ydate"

minmax() {
  typeset tmax=-1000
  typeset tmin=1000
  typeset sum=0
  typeset count=0
  typeset freezecount=0
  cat "$1" | while IFS=, read -r -- ts temp
  do
    # Skip the header line
    [[ $ts == [a-z]* ]] && continue
    # Increment the counter and the sum (for the average)
    (( count++ ))
    (( sum = sum + temp ))
    # Increment the freeze count if below freezing
    if (( temp < 32.1 ))
    then
      (( freezecount++ ))
    fi
    # Check against the maximum/minimums
    if (( temp > tmax ))
    then
      tmax=$temp
      maxtime=${ts%[0-9].*}0
    fi
    if (( temp < tmin ))
    then
      tmin=$temp
      mintime=${ts%[0-9].*}0
    fi
  done
  # Calculate average temp
  avg=$((sum/count))
  # NOTE: The lack of a newline is intentional, see the following lines
  printf "Range: %4.1f-%4.1f Avg: %4.1f" "${tmin}" "${tmax}" "${avg}"
  # Add degree days if it's outside temps
  if [[ $2 == out ]]
  then
    ddref=${intemp#-65}
    # Output effective degree days based on house average temperature (65 if not known)
    if (( ddref > avg ))
    then
      printf " DD %4.1f (r:%4.1f)\n" "$(( ddref - avg ))" "$ddref"
    else
      # Break the line
      echo
    fi
  else
    # Set the inside average temp
    intemp="${avg}"
    # Just output a newline
    echo
  fi
  # Output the freezing time
  if (( freezecount ))
  then
    echo "         _$((freezecount*count/1440)) minutes below freezing_"
  fi
}

echo "*Lake house past day status:*"
echo -n " *Inside*: "
minmax "$yinfile"
echo -n "*Outside*: "
minmax "$youtfile" out
